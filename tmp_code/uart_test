
  char uart_buffer[127];
  memset(uart_buffer,0,sizeof(uart_buffer));
  // Create the handle for the sensor.
  sht3x_handle_t handle = {
      .i2c_handle = &hi2c1,
      .device_address = SHT3X_I2C_DEVICE_ADDRESS_ADDR_PIN_HIGH
  };

  // Initialise sensor (tests connection by reading the status register).
  if (!sht3x_init(&handle)) {
      sprintf(uart_buffer,"SHT3x access failed.\n\r");
      HAL_UART_Transmit(&huart1,uart_buffer,sizeof(uart_buffer),10);
  }
  sprintf(uart_buffer,"zadek :D.\r\n");
  HAL_UART_Transmit(&huart1,uart_buffer,sizeof(uart_buffer),10);
  memset(uart_buffer,0,sizeof(uart_buffer));
  // Read temperature and humidity.
  float temperature, humidity;

  sht3x_read_temperature_and_humidity(&handle, &temperature, &humidity);
  sprintf(uart_buffer,"Initial temperature: %.2fC, humidity: %.2f%%RH\n\r", temperature, humidity);
  HAL_UART_Transmit(&huart1,uart_buffer,sizeof(uart_buffer),10);
  memset(uart_buffer,0,sizeof(uart_buffer));
  // Enable heater for two seconds.
  sht3x_set_header_enable(&handle, true);
  HAL_Delay(2000);
  sht3x_set_header_enable(&handle, false);

  // Read temperature and humidity again.
  sht3x_read_temperature_and_humidity(&handle, &temperature, &humidity);
  sprintf(uart_buffer,"After heating temperature: %.2fC, humidity: %.2f%%RH\n\r", temperature, humidity);
  HAL_UART_Transmit(&huart1,uart_buffer,sizeof(uart_buffer),10);
  memset(uart_buffer,0,sizeof(uart_buffer));
  while (1)
  {
    /* USER CODE END WHILE */
	  HAL_GPIO_WritePin(GPIOE,GPIO_PIN_8,GPIO_PIN_RESET);
	  HAL_GPIO_WritePin(GPIOE,GPIO_PIN_12,GPIO_PIN_RESET);
	  HAL_GPIO_WritePin(GPIOE,GPIO_PIN_13,GPIO_PIN_SET);
	  HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_SET);
	  HAL_Delay(1000);
	  HAL_GPIO_WritePin(GPIOE,GPIO_PIN_13,GPIO_PIN_RESET);
	  HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
	  HAL_GPIO_WritePin(GPIOE,GPIO_PIN_12,GPIO_PIN_SET);
	  HAL_GPIO_WritePin(GPIOE,GPIO_PIN_8,GPIO_PIN_SET);
	  HAL_Delay(1000);

	  sht3x_read_temperature_and_humidity(&handle, &temperature, &humidity);
		sprintf(uart_buffer,"Initial temperature: %.2fC, humidity: %.2f%%RH\n\r", temperature, humidity);
		HAL_UART_Transmit(&huart1,uart_buffer,sizeof(uart_buffer),10);
		memset(uart_buffer,0,sizeof(uart_buffer));
    /* USER CODE BEGIN 3 */
  }
